@use '@suits/ss-design-system/dist/ss-components/styles/sass/mixins/_breakpoints.scss' as bp;

@mixin text-position {
  // Horizontally Centered
  &-center-center,
  &-bottom-center {
    left: 0;
    right: 0;
  }

  // Left Aligned
  &-center-left,
  &-bottom-left {
    text-align: left;
    left: calc(var(--spacing-base) * 20);
  }

  // Vertically Centered
  &-center-center,
  &-center-left {
    top: 50%;
  }

  // Bottom Aligned
  &-bottom-center,
  &-bottom-left {
    top: 0;
    bottom: 0;
    padding-bottom: calc(var(--spacing-base) * 20);
  }
}

.banner {
  background-color: var(--color-background);
  box-sizing: border-box;
  cursor: pointer;
  display: block;
  height: var(--screen-inner-height, 100vh);
  overflow: hidden;
  padding: 0;
  position: relative;
  user-select: none;
  width: 100%;

  &__image {
    position: relative;
    width: 100%;
  }

  &__container {
    position: relative;
    width: 100%;
    height: 100%;
    display: block;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100% !important;
    object-fit: cover;
  }

  picture {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &__text {
    position: absolute;
    top: 0;
    left: 0;

    @include bp.respond-from('lg') {
      padding: 60px 32px 32px;
    }

    @include bp.respond-between('md', 'lg') {
      padding: 60px 28px 28px;
    }

    @include bp.respond-until('md') {
      padding: 60px 16px 16px;
    }

    &--top-scrolled {
      position: fixed;
      top: auto;
      bottom: 0;
    }

    &--bottom-scrolled {
      position: absolute;
      top: auto;
      bottom: 0;
    }

    &--light {
      color: var(--color-surface);
      text-decoration: none;
    }

    &--dark {
      color: var(--color-primary);
    }
  }
}
