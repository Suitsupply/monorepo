name: CI

on:
  push:
    branches:
      - main
      - acceptance
      - testing
      - feature/**
      - bugfix/**
  pull_request:
    # branches:
    #   - main
    #   - acceptance
    #   - testing

jobs:
  set_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      vercel_environment: ${{ steps.set-env.outputs.vercel_environment }}
    steps:
      - name: Determine Environment
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=main" >> $GITHUB_ENV
            echo "::set-output name=environment::main"
            echo "vercel_environment=production" >> $GITHUB_ENV
            echo "::set-output name=vercel_environment::production"
          elif [[ "${{ github.ref }}" == "refs/heads/acceptance" ]]; then
            echo "environment=acceptance" >> $GITHUB_ENV
            echo "::set-output name=environment::acceptance"
            echo "vercel_environment=production" >> $GITHUB_ENV
            echo "::set-output name=vercel_environment::production"
          elif [[ "${{ github.ref }}" == "refs/heads/testing" ]]; then
            echo "environment=testing" >> $GITHUB_ENV
            echo "::set-output name=environment::testing"
            echo "vercel_environment=development" >> $GITHUB_ENV
            echo "::set-output name=vercel_environment::development"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "vercel_environment=preview" >> $GITHUB_ENV
            echo "::set-output name=vercel_environment::preview"
          else
            echo "No specific environment for this branch"
          fi

  install_and_test:
    needs: set_environment
    runs-on: ubuntu-latest
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      CI: true
      node_version_spec: 20.12.2
      pnpm_version_spec: 9.4.0
      node_modules_root: '.'
      pnpm_config_cache: ${{ github.workspace }}/.pnpm-store
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_main_branch: ${{ github.ref == 'refs/heads/main' }}
      is_acceptance_branch: ${{ github.ref == 'refs/heads/acceptance' }}
      is_testing_branch: ${{ github.ref == 'refs/heads/testing' }}
      is_preview: ${{ github.event_name == 'pull_request' || (github.ref != 'refs/heads/main' && github.ref != 'refs/heads/acceptance' && github.ref != 'refs/heads/testing') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: PNPM Setup
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpm_version_spec }}

      - name: PNPM Cache Restore
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
          key: pnpm-${{ runner.os }}-${{ github.sha }}-pnpm-lock.yaml
          restore-keys: |
            pnpm-${{ runner.os }}-${{ github.sha }}-
            pnpm-${{ runner.os }}-
            pnpm-

      - name: NX Cache Restore
        uses: actions/cache/restore@v3
        with:
          path: |
            .nx
          key: nx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-
            nx-

      - name: Vercel Pull
        run: |
          vercel pull \
            --yes \
            --environment=${{ needs.set_environment.outputs.vercel_environment }} \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_SCOPE }}
          vercel env pull .env \
            --yes \
            --environment=${{ needs.set_environment.outputs.vercel_environment }} \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_SCOPE }}

      # - name: NPM Authenticate
      #   run: echo "//pkgs.dev.azure.com/suitsupply/_packaging/suitsupply-npm-internal/npm/registry/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
      - uses: nodef/npm-config.action@v1.0.0
        with:
          credentials: auto

      - name: PNPM Config
        run: pnpm config set store-dir ${{ env.pnpm_config_cache }}

      - name: Install PNPM
        run: npm install -g pnpm

      - name: PNPM Install
        run: |
          pnpm install

      - name: PNPM Cache Save
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
          key: pnpm-${{ runner.os }}-${{ github.sha }}-pnpm-lock.yaml
          restore-keys: |
            pnpm-${{ runner.os }}-${{ github.sha }}-
            pnpm-${{ runner.os }}-
            pnpm-

      # TODO: Document.
      # - uses: nrwl/nx-set-shas@v3
      # AFFECTED_PROJECTS=$(pnpm nx show projects --affected)

      - name: Lint & Test & Build
        run: |
          pnpm nx run @susu/headless-commerce:test-coverage

      - name: NX Cache Save
        uses: actions/cache/save@v3
        with:
          path: |
            .nx
          key: nx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-
            nx-

      - name: Main Deploy Headless
        if: ${{ env.is_pr }} == 'false'
        run: |
          vercel --prod \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_SCOPE }} \
            > deployment-url.txt

      - name: PR Deploy Headless
        if: ${{ env.is_pr }} == 'true'
        run: |
          vercel \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_SCOPE }} \
            > deployment-url.txt
